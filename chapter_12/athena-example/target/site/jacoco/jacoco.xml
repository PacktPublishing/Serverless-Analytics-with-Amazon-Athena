<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="athena-example"><sessioninfo id="DESKTOP-H0BTV13-c7f1a810" start="1623720225339" dump="1623720248219"/><package name="com/amazonaws/connectors/athena/example"><class name="com/amazonaws/connectors/athena/example/ExampleUserDefinedFuncHandler" sourcefilename="ExampleUserDefinedFuncHandler.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract_tx_id" desc="(Ljava/util/Map;)Ljava/lang/Integer;" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrypt" desc="(Ljava/lang/String;)Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="symmetricDecrypt" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEncryptionKey" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/amazonaws/connectors/athena/example/ExampleRecordHandler" sourcefilename="ExampleRecordHandler.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/amazonaws/services/s3/AmazonS3;Lcom/amazonaws/services/secretsmanager/AWSSecretsManager;Lcom/amazonaws/services/athena/AmazonAthena;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readWithConstraint" desc="(Lcom/amazonaws/athena/connector/lambda/data/BlockSpiller;Lcom/amazonaws/athena/connector/lambda/records/ReadRecordsRequest;Lcom/amazonaws/athena/connector/lambda/QueryStatusChecker;)V" line="113"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="openS3File" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/BufferedReader;" line="224"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$readWithConstraint$0" desc="(Lcom/amazonaws/athena/connector/lambda/data/writers/GeneratedRowWriter;[Ljava/lang/String;Lcom/amazonaws/athena/connector/lambda/data/Block;I)I" line="215"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="150" covered="14"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="26" covered="4"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/amazonaws/connectors/athena/example/ExampleMetadataHandler" sourcefilename="ExampleMetadataHandler.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/amazonaws/athena/connector/lambda/security/EncryptionKeyFactory;Lcom/amazonaws/services/secretsmanager/AWSSecretsManager;Lcom/amazonaws/services/athena/AmazonAthena;Ljava/lang/String;Ljava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doListSchemaNames" desc="(Lcom/amazonaws/athena/connector/lambda/data/BlockAllocator;Lcom/amazonaws/athena/connector/lambda/metadata/ListSchemasRequest;)Lcom/amazonaws/athena/connector/lambda/metadata/ListSchemasResponse;" line="108"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doListTables" desc="(Lcom/amazonaws/athena/connector/lambda/data/BlockAllocator;Lcom/amazonaws/athena/connector/lambda/metadata/ListTablesRequest;)Lcom/amazonaws/athena/connector/lambda/metadata/ListTablesResponse;" line="135"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetTable" desc="(Lcom/amazonaws/athena/connector/lambda/data/BlockAllocator;Lcom/amazonaws/athena/connector/lambda/metadata/GetTableRequest;)Lcom/amazonaws/athena/connector/lambda/metadata/GetTableResponse;" line="199"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPartitions" desc="(Lcom/amazonaws/athena/connector/lambda/data/BlockWriter;Lcom/amazonaws/athena/connector/lambda/metadata/GetTableLayoutRequest;Lcom/amazonaws/athena/connector/lambda/QueryStatusChecker;)V" line="260"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetSplits" desc="(Lcom/amazonaws/athena/connector/lambda/data/BlockAllocator;Lcom/amazonaws/athena/connector/lambda/metadata/GetSplitsRequest;)Lcom/amazonaws/athena/connector/lambda/metadata/GetSplitsResponse;" line="303"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="173" covered="13"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="36" covered="3"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/amazonaws/connectors/athena/example/ExampleCompositeHandler" sourcefilename="ExampleCompositeHandler.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ExampleRecordHandler.java"><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="11" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="20" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="2" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="2" cb="0"/><line nr="207" mi="10" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="15" ci="0" mb="2" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="14" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="2" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="227" mi="14" ci="0" mb="0" cb="0"/><line nr="228" mi="9" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="150" covered="14"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="26" covered="4"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleMetadataHandler.java"><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="10" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="199" mi="10" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="2" cb="0"/><line nr="261" mi="7" ci="0" mb="2" cb="0"/><line nr="262" mi="7" ci="0" mb="2" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="10" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="310" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="8" ci="0" mb="2" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="11" ci="0" mb="0" cb="0"/><line nr="339" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="13"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="36" covered="3"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleUserDefinedFuncHandler.java"><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExampleCompositeHandler.java"><line nr="33" mi="11" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="344" covered="65"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="68" covered="18"/><counter type="COMPLEXITY" missed="21" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="1" covered="3"/></package><counter type="INSTRUCTION" missed="344" covered="65"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="68" covered="18"/><counter type="COMPLEXITY" missed="21" covered="8"/><counter type="METHOD" missed="13" covered="8"/><counter type="CLASS" missed="1" covered="3"/></report>